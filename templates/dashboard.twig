{% extends 'base.twig' %}

{% block title %}Dashboard - TicketFlow{% endblock %}

{% block layout %}
    {% include '/components/dashboard-header.twig' %}
    {% include '/components/sidebar.twig' with {'page': 'dashboard'} %}

    <main class="pt-20 lg:pl-64 px-4">
        <h1 class="text-2xl font-bold mb-6">Dashboard</h1>

        {# === Ticket Stats Section === #}
        <section class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div class="p-4 bg-white rounded shadow dark:bg-[#3a3734]">
                <h3 class="text-sm text-slate-500">Total Tickets</h3>
                <div class="text-3xl font-semibold mt-2" id="total-tickets">0</div>
            </div>
            <div class="p-4 bg-white rounded shadow dark:bg-[#3a3734]">
                <h3 class="text-sm text-slate-500">Open Tickets</h3>
                <div class="text-3xl font-semibold mt-2" id="open-tickets">0</div>
            </div>
            <div class="p-4 bg-white rounded shadow dark:bg-[#3a3734]">
                <h3 class="text-sm text-slate-500">In Progress</h3>
                <div class="text-3xl font-semibold mt-2" id="in-progress-tickets">0</div>
            </div>
            <div class="p-4 bg-white rounded shadow dark:bg-[#3a3734]">
                <h3 class="text-sm text-slate-500">Closed Tickets</h3>
                <div class="text-3xl font-semibold mt-2" id="closed-tickets">0</div>
            </div>
        </section>

        <a href="/ticketPage.php" class="mt-4 inline-block px-4 py-2 bg-amber-400 text-white rounded hover:bg-amber-500">Manage Tickets</a>

        {# === Recent Tickets Section === #}
        <section class="mt-10">
            <div class="flex items-center justify-between mb-4">
                <h2 class="text-lg font-semibold">Recent Tickets</h2>
                <a href="/tickets.php" class="text-sm text-slate-500">View all</a>
            </div>

            <div id="recent-tickets" class="grid gap-4 md:grid-cols-3">
                {# Tickets will be dynamically injected here by JS #}
            </div>
        </section>
    </main>
{% endblock %}

{% block script %}
<script>
document.addEventListener('DOMContentLoaded', () => {
    // === Dark Mode ===
    if (localStorage.getItem('darkMode') === 'true') {
        document.documentElement.classList.add('dark');
    }

    const toggleBtn = document.getElementById('dark-mode-toggle');
    if (toggleBtn) {
        toggleBtn.addEventListener('click', () => {
            document.documentElement.classList.toggle('dark');
            localStorage.setItem('darkMode', document.documentElement.classList.contains('dark'));
        });
    }

    // === Sidebar Toggle ===
    const sidebarToggle = document.getElementById('sidebar-toggle');
    if (sidebarToggle) {
        sidebarToggle.addEventListener('click', () => {
            const sidebar = document.getElementById('sidebar');
            if (sidebar) sidebar.classList.toggle('-translate-x-full');
        });
    }

    // === Auth Check ===
    const session = JSON.parse(localStorage.getItem('ticketapp_session'));
    if (!session) {
        alert('Your session has expired — please log in again.');
        window.location.href = '/login.php';
        return;
    }

    // === Load Tickets from localStorage ===
    const tickets = JSON.parse(localStorage.getItem('tickets') || '[]');

    // === Update Stats ===
    const total = tickets.length;
    const open = tickets.filter(t => t.status === 'open').length;
    const inProgress = tickets.filter(t => t.status === 'in_progress').length;
    const closed = tickets.filter(t => t.status === 'closed').length;

    document.getElementById('total-tickets').textContent = total;
    document.getElementById('open-tickets').textContent = open;
    document.getElementById('in-progress-tickets').textContent = inProgress;
    document.getElementById('closed-tickets').textContent = closed;

    // === Render Recent Tickets ===
    function renderTickets() {
        const list = document.getElementById('recent-tickets');
        list.innerHTML = '';

        if (tickets.length === 0) {
            list.innerHTML = `<p class="text-gray-500 dark:text-gray-400">No tickets yet.</p>`;
            return;
        }

        const recent = tickets.slice(-3).reverse(); // Show latest 3 tickets

        recent.forEach(ticket => {
            const card = document.createElement('article');
            card.className = 'flex flex-col p-4 bg-white rounded shadow dark:bg-[#3a3734]';
            card.innerHTML = `
                <div class="flex items-start justify-between gap-4">
                    <div>
                        <h3 class="font-semibold">${ticket.title}</h3>
                        <p class="text-sm text-slate-500 mt-2 dark:text-slate-400">
                            ${ticket.description?.slice(0, 120) || 'No description'}
                        </p>
                    </div>
                    <div class="flex flex-col items-end gap-2">
                        <span class="px-3 py-1 rounded-full text-sm font-semibold ${
                            ticket.status === 'open'
                                ? 'bg-green-50 text-green-600'
                                : ticket.status === 'in_progress'
                                ? 'bg-amber-50 text-amber-600'
                                : 'bg-slate-100 text-slate-600'
                        }">${ticket.status}</span>
                        <div class="text-xs text-slate-400 dark:text-slate-500">
                            ${new Date(ticket.createdAt).toLocaleString()}
                        </div>
                    </div>
                </div>
                <div class="mt-4 flex gap-2">
                    <button class="px-3 py-1 text-green-400 border rounded" onclick="editTicket(${ticket.id})">Edit</button>
                    <button class="px-3 py-1 border rounded text-red-600" onclick="deleteTicket(${ticket.id})">Delete</button>
                </div>
            `;
            list.appendChild(card);
        });
    }

    renderTickets();
});

// === Global Ticket Actions ===
function editTicket(id) {
    alert(`Edit ticket ${id} — implement navigation or modal logic here.`);
}

function deleteTicket(id) {
    if (confirm('Are you sure you want to delete this ticket?')) {
        const tickets = JSON.parse(localStorage.getItem('tickets') || '[]');
        const updated = tickets.filter(t => t.id !== id);
        localStorage.setItem('tickets', JSON.stringify(updated));
        location.reload();
    }
}
</script>
{% endblock %}
